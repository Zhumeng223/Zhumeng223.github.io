[{"title":"iOS面试题","path":"/2024/03/06/iOS面试题/","content":"1、一个NSObject对象占用多少内存？回答：系统分配了16个字节给NSObject对象（通过malloc_size函数获得）（因为内存对齐，必须是16的倍数）但NSObject对象内部只有一个isa指针，只使用了8个字节的空间（64bit环境下，可以通过class_getInstanceSize函数获得） 2、对象的isa指针指向哪里？回答：instance对象的isa指针指向class对象class对象的isa指针指向meta-class对象meta-class对象的isa指针指向基类的meta-class对象 3、OC的类信息存放在哪里？回答：对象方法、属性、成员变量、协议信息，存放在class对象中类方法，存放在meta-class对象中成员变量的具体值，存放在instance对象中 4、iOS用什么方式实现对一个对象的KVO？（KVO的本质是什么？）回答：利用RuntimeAPI生成一个子类NSKVOXXXNotifying，并且让instance对象的isa指针指向这个全新的子类当修改instance对象的属性时，会调用Foundation框架中的_NSSetXXXValueAndNotify函数（重写了setter方法）：willChangeValueForKey:父类原来的setter方法didChangeValueForKey:内部会触发监听器（Observer）的监听方法（observeValueForKeyPath:ofObject:change:context） 5、如何手动触发KVO？回答：手动去调用willChangeValueForKey:和didChangeValueForKey:的方法 6、直接修改成员变量会触发KVO吗？回答：不会，因为修改成员变量并不会调用setter方法 7、通过KVC修改属性会触发KVO吗？回答：会触发KVO，通过KVC修改相当于手动调用了willChangeValueForKey:和didChangeValueForKey: 8、KVC的赋值和取值的过程是怎样的？原理是什么？回答：赋值：取值： 9、Category的使用场合是什么？回答：类包含了很多个方法实现，而这些方法需要不同团队的成员来实现当你在使用基础类库中的类时，你不想继承这些类，而只是想添加一些方法的时候 10、Category的实现原理回答：Category编译之后的底层结构是struct category_t，里面存储着分类的对象方法、类方法、属性、协议信息程序运行的时候，runtime会将Category的数据，合并到类信息中（类对象、元类对象中） 11、Category和Class Extension的区别是什么？回答：Class Extension是在程序编译的时候，它的数据就已经包含在类信息中了Category在底层是以结构体的形式存在，在程序运行的时候，才会将数据合并到类信息中 12、Category中有load方法吗？load方法是什么时候调用的？load方法能继承吗？回答：有load方法load方法在runtime加载类、分类的时候调用，而且只调用一次load方法可以继承，但是一般情况下不会主动去调用load方法，都是让系统自动调用 13、load、initialize方法的区别是什么？它们在category中的调用顺序？以及出现继承时它们之间的调用过程？回答：load方法load方法会在Runtime加载类、分类的时候调用每个类、分类的load，在程序运行的过程中只调用一次调用顺序：先调用类的load按照编译的先后顺序调用（先编译，先调用）调用子类的load之前会先调用父类的load再调用分类的load按照编译先后顺序调用（先编译，先调用）load方法系统调用和主动调用的区别系统调用load是直接找到类或分类中的方法的内存地址直接调用主动调用load是通过消息机制来发送消息的，会在对应的消息列表里按顺序遍历一层层查找，找到就调用initialize方法initialize方法会在类第一次接收到消息时调用调用顺序：先调用父类的initialize，再调用子类的initialize，每个类只会初始化1次（如果子类没有实现initialize方法，会调用父类的initialize方法，所以父类的initialize方法可能会调用多次）initialize的调用是通过消息机制来发送消息的 14、Category能否添加成员变量？如果可以，如何给Category添加成员变量？回答：不能直接给Category添加成员变量，但是可以简介实现Category有成员变量的效果——关联对象"},{"title":"iOS易忘图","path":"/2024/03/05/易忘图/","content":"isa和superclass指针 KVCsetValue:forKey:的原理 KVCvalueForKey:的原理 @encode&#96;字符串编码 类的底层结构 常见的深浅拷贝 同步异步&#x2F;串行并发 动态方法解析 消息转发 排序算法时间复杂度","categories":["iOS"]},{"title":"Mac常用代码","path":"/2024/03/04/Mac常用代码/","content":"一、Git创建新分支1git checkout -b dev 相当于以下两条命令： 12git branch devgit checkout dev 提交的时候执行： 1git push --set-upstream origin dev 二、文件夹的显示和隐藏1、Mac显示隐藏文件夹1defaults write com.apple.finder AppleShowAllFiles -boolean true;killall Finder 2、Mac隐藏文件夹1defaults write com.apple.finder AppleShowAllFiles -boolean false;killall Finder 三、给安卓手机安装软件1adb install -r（然后拖入apk文件） 四、OC代码转为C++代码1xcrun -sdk iphoneos clang arm64 -rewrite-objc main.m 如果代码里有weak的话使用以下代码： 1xcrun -sdk iphoneos clang -arch arm64 -rewrite-objc -fobjc-arc -fobjc-runtime=ios-8.0.0 main.m"},{"title":"Hello World","path":"/2024/03/04/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment"}]